# Generated by Django 4.0.4 on 2022-06-26 09:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=140)),
                ('image', models.ImageField(blank=True, upload_to='media/')),
                ('video', models.FileField(blank=True, upload_to='media/')),
                ('body', models.CharField(max_length=5000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('bit_type', models.CharField(default='chat', max_length=20)),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('is_public', models.BooleanField(default=False)),
                ('is_tips', models.BooleanField(default=False)),
                ('comment_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bits', models.ManyToManyField(blank=True, related_name='clustered_bit', to='social.bit')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=1000)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('bit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.bit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reciever', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_uploaded', models.BooleanField(default=False)),
                ('image', models.ImageField(default='media/blenderlogo.png', upload_to='media/')),
                ('background_image', models.ImageField(blank=True, upload_to='media/')),
                ('is_public', models.BooleanField(default=False)),
                ('bit_background', models.CharField(default='#000000', max_length=50)),
                ('background_color', models.CharField(default='#000000', max_length=50)),
                ('accent_color', models.CharField(default='#ffffff', max_length=50)),
                ('title_color', models.CharField(default='#ffffff', max_length=50)),
                ('text_color', models.CharField(default='#ffffff', max_length=50)),
                ('user_bio', models.CharField(blank=True, max_length=500)),
                ('feedback_icon_color', models.CharField(default='#ffffff', max_length=50)),
                ('icon_color', models.CharField(default='#ffffff', max_length=50)),
                ('clusters', models.ManyToManyField(blank=True, related_name='clusters', to='social.cluster')),
                ('connections', models.ManyToManyField(blank=True, related_name='friends_with', to='social.profile')),
                ('conversations', models.ManyToManyField(blank=True, related_name='conversations', to='social.conversation')),
                ('disliked_bits', models.ManyToManyField(blank=True, related_name='disliked_bits', to='social.bit')),
                ('follows', models.ManyToManyField(blank=True, related_name='followed_by', to='social.profile')),
                ('liked_bits', models.ManyToManyField(blank=True, related_name='liked_bits', to='social.bit')),
                ('pending_requests', models.ManyToManyField(blank=True, related_name='friend_request', to='social.connectrequest')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notication_type', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_has_seen', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='social.comment')),
                ('from_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_from', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='social.bit')),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1500)),
                ('video', models.FileField(blank=True, upload_to='media/message_attachments')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/message_attachments')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='social.conversation')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_from', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bit_background', models.CharField(default='#000000', max_length=50)),
                ('background_color', models.CharField(default='#000000', max_length=50)),
                ('accent_color', models.CharField(default='#ffffff', max_length=50)),
                ('title_color', models.CharField(default='#ffffff', max_length=50)),
                ('text_color', models.CharField(default='#ffffff', max_length=50)),
                ('user_bio', models.CharField(blank=True, max_length=500)),
                ('feedback_icon_color', models.CharField(default='#ffffff', max_length=50)),
                ('icon_color', models.CharField(default='#ffffff', max_length=50)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='custom', to='social.profile')),
            ],
        ),
        migrations.AddField(
            model_name='cluster',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cluster', to='social.profile'),
        ),
        migrations.AddField(
            model_name='bit',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='bit_comments', to='social.comment'),
        ),
        migrations.AddField(
            model_name='bit',
            name='dislikes',
            field=models.ManyToManyField(blank=True, related_name='dislikes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bit',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bit',
            name='notifications',
            field=models.ManyToManyField(blank=True, related_name='notifications', to='social.notification'),
        ),
        migrations.AddField(
            model_name='bit',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bits', to=settings.AUTH_USER_MODEL),
        ),
    ]
